//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proyecto_HRPS
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HR_PAYROLL_SYSTEMEntities : DbContext
    {
        public HR_PAYROLL_SYSTEMEntities()
            : base("name=HR_PAYROLL_SYSTEMEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<HORAS_EXTRAS> HORAS_EXTRAS { get; set; }
        public virtual DbSet<ROLES> ROLES { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<USUARIOS> USUARIOS { get; set; }
        public virtual DbSet<VACACIONES> VACACIONES { get; set; }
        public virtual DbSet<database_firewall_rules> database_firewall_rules { get; set; }
    
        public virtual int ADMINISTRADOR_ACEPTAR_NEGAR_SOLICITUD_HORAS_EXTRAS(Nullable<int> p_PK_SOLICITUD, string p_ESTADO)
        {
            var p_PK_SOLICITUDParameter = p_PK_SOLICITUD.HasValue ?
                new ObjectParameter("P_PK_SOLICITUD", p_PK_SOLICITUD) :
                new ObjectParameter("P_PK_SOLICITUD", typeof(int));
    
            var p_ESTADOParameter = p_ESTADO != null ?
                new ObjectParameter("P_ESTADO", p_ESTADO) :
                new ObjectParameter("P_ESTADO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADMINISTRADOR_ACEPTAR_NEGAR_SOLICITUD_HORAS_EXTRAS", p_PK_SOLICITUDParameter, p_ESTADOParameter);
        }
    
        public virtual int ADMINISTRADOR_ACEPTAR_O_NEGAR_SOLICITUD(Nullable<int> p_PK_ID_SOLICITUD, string p_ESTADO)
        {
            var p_PK_ID_SOLICITUDParameter = p_PK_ID_SOLICITUD.HasValue ?
                new ObjectParameter("P_PK_ID_SOLICITUD", p_PK_ID_SOLICITUD) :
                new ObjectParameter("P_PK_ID_SOLICITUD", typeof(int));
    
            var p_ESTADOParameter = p_ESTADO != null ?
                new ObjectParameter("P_ESTADO", p_ESTADO) :
                new ObjectParameter("P_ESTADO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADMINISTRADOR_ACEPTAR_O_NEGAR_SOLICITUD", p_PK_ID_SOLICITUDParameter, p_ESTADOParameter);
        }
    
        public virtual int ADMINISTRADOR_BORRAR_EMPLEADO(string p_CEDULA)
        {
            var p_CEDULAParameter = p_CEDULA != null ?
                new ObjectParameter("P_CEDULA", p_CEDULA) :
                new ObjectParameter("P_CEDULA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADMINISTRADOR_BORRAR_EMPLEADO", p_CEDULAParameter);
        }
    
        public virtual int ADMINISTRADOR_CAMBIAR_HORARIO(string p_CEDULA, string p_HORARIO)
        {
            var p_CEDULAParameter = p_CEDULA != null ?
                new ObjectParameter("P_CEDULA", p_CEDULA) :
                new ObjectParameter("P_CEDULA", typeof(string));
    
            var p_HORARIOParameter = p_HORARIO != null ?
                new ObjectParameter("P_HORARIO", p_HORARIO) :
                new ObjectParameter("P_HORARIO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADMINISTRADOR_CAMBIAR_HORARIO", p_CEDULAParameter, p_HORARIOParameter);
        }
    
        public virtual int ADMINISTRADOR_CAMBIAR_SALARIO(string p_CEDULA, Nullable<int> p_SALARIO)
        {
            var p_CEDULAParameter = p_CEDULA != null ?
                new ObjectParameter("P_CEDULA", p_CEDULA) :
                new ObjectParameter("P_CEDULA", typeof(string));
    
            var p_SALARIOParameter = p_SALARIO.HasValue ?
                new ObjectParameter("P_SALARIO", p_SALARIO) :
                new ObjectParameter("P_SALARIO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADMINISTRADOR_CAMBIAR_SALARIO", p_CEDULAParameter, p_SALARIOParameter);
        }
    
        public virtual int ADMINISTRADOR_INICIO_SESION(string p_CEDULA, string p_CONTRASENNA, Nullable<int> p_ROL, ObjectParameter bIT)
        {
            var p_CEDULAParameter = p_CEDULA != null ?
                new ObjectParameter("P_CEDULA", p_CEDULA) :
                new ObjectParameter("P_CEDULA", typeof(string));
    
            var p_CONTRASENNAParameter = p_CONTRASENNA != null ?
                new ObjectParameter("P_CONTRASENNA", p_CONTRASENNA) :
                new ObjectParameter("P_CONTRASENNA", typeof(string));
    
            var p_ROLParameter = p_ROL.HasValue ?
                new ObjectParameter("P_ROL", p_ROL) :
                new ObjectParameter("P_ROL", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADMINISTRADOR_INICIO_SESION", p_CEDULAParameter, p_CONTRASENNAParameter, p_ROLParameter, bIT);
        }
    
        public virtual int ADMINISTRADOR_INSERTAR_EMPLEADO(string p_CEDULA, string p_NOMBRE, string p_HORARIO, Nullable<System.DateTime> p_FECHA_NAC, Nullable<int> p_SALARIO, string p_PUESTO, Nullable<decimal> p_SALARIO_HORA, string p_TIEMPO, string p_CONTRASENA, Nullable<int> p_FK_ROL)
        {
            var p_CEDULAParameter = p_CEDULA != null ?
                new ObjectParameter("P_CEDULA", p_CEDULA) :
                new ObjectParameter("P_CEDULA", typeof(string));
    
            var p_NOMBREParameter = p_NOMBRE != null ?
                new ObjectParameter("P_NOMBRE", p_NOMBRE) :
                new ObjectParameter("P_NOMBRE", typeof(string));
    
            var p_HORARIOParameter = p_HORARIO != null ?
                new ObjectParameter("P_HORARIO", p_HORARIO) :
                new ObjectParameter("P_HORARIO", typeof(string));
    
            var p_FECHA_NACParameter = p_FECHA_NAC.HasValue ?
                new ObjectParameter("P_FECHA_NAC", p_FECHA_NAC) :
                new ObjectParameter("P_FECHA_NAC", typeof(System.DateTime));
    
            var p_SALARIOParameter = p_SALARIO.HasValue ?
                new ObjectParameter("P_SALARIO", p_SALARIO) :
                new ObjectParameter("P_SALARIO", typeof(int));
    
            var p_PUESTOParameter = p_PUESTO != null ?
                new ObjectParameter("P_PUESTO", p_PUESTO) :
                new ObjectParameter("P_PUESTO", typeof(string));
    
            var p_SALARIO_HORAParameter = p_SALARIO_HORA.HasValue ?
                new ObjectParameter("P_SALARIO_HORA", p_SALARIO_HORA) :
                new ObjectParameter("P_SALARIO_HORA", typeof(decimal));
    
            var p_TIEMPOParameter = p_TIEMPO != null ?
                new ObjectParameter("P_TIEMPO", p_TIEMPO) :
                new ObjectParameter("P_TIEMPO", typeof(string));
    
            var p_CONTRASENAParameter = p_CONTRASENA != null ?
                new ObjectParameter("P_CONTRASENA", p_CONTRASENA) :
                new ObjectParameter("P_CONTRASENA", typeof(string));
    
            var p_FK_ROLParameter = p_FK_ROL.HasValue ?
                new ObjectParameter("P_FK_ROL", p_FK_ROL) :
                new ObjectParameter("P_FK_ROL", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADMINISTRADOR_INSERTAR_EMPLEADO", p_CEDULAParameter, p_NOMBREParameter, p_HORARIOParameter, p_FECHA_NACParameter, p_SALARIOParameter, p_PUESTOParameter, p_SALARIO_HORAParameter, p_TIEMPOParameter, p_CONTRASENAParameter, p_FK_ROLParameter);
        }
    
        public virtual ObjectResult<ADMINISTRADOR_VER_EMPLEADOS_A_BORRAR_Result> ADMINISTRADOR_VER_EMPLEADOS_A_BORRAR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ADMINISTRADOR_VER_EMPLEADOS_A_BORRAR_Result>("ADMINISTRADOR_VER_EMPLEADOS_A_BORRAR");
        }
    
        public virtual ObjectResult<ADMINISTRADOR_VER_EMPLEADOS_ACTIVOS_Result> ADMINISTRADOR_VER_EMPLEADOS_ACTIVOS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ADMINISTRADOR_VER_EMPLEADOS_ACTIVOS_Result>("ADMINISTRADOR_VER_EMPLEADOS_ACTIVOS");
        }
    
        public virtual ObjectResult<ADMINISTRADOR_VER_EMPLEADOS_INACTIVOS_Result> ADMINISTRADOR_VER_EMPLEADOS_INACTIVOS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ADMINISTRADOR_VER_EMPLEADOS_INACTIVOS_Result>("ADMINISTRADOR_VER_EMPLEADOS_INACTIVOS");
        }
    
        public virtual ObjectResult<ADMINISTRADOR_VER_EMPLEADOS_PARA_HORARIOS_Result> ADMINISTRADOR_VER_EMPLEADOS_PARA_HORARIOS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ADMINISTRADOR_VER_EMPLEADOS_PARA_HORARIOS_Result>("ADMINISTRADOR_VER_EMPLEADOS_PARA_HORARIOS");
        }
    
        public virtual ObjectResult<ADMINISTRADOR_VER_EMPLEADOS_PARA_SALARIOS_Result> ADMINISTRADOR_VER_EMPLEADOS_PARA_SALARIOS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ADMINISTRADOR_VER_EMPLEADOS_PARA_SALARIOS_Result>("ADMINISTRADOR_VER_EMPLEADOS_PARA_SALARIOS");
        }
    
        public virtual ObjectResult<ADMINISTRADOR_VER_HORARIOS_Result> ADMINISTRADOR_VER_HORARIOS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ADMINISTRADOR_VER_HORARIOS_Result>("ADMINISTRADOR_VER_HORARIOS");
        }
    
        public virtual ObjectResult<ADMINISTRADOR_VER_HORAS_EXTRAS_Result> ADMINISTRADOR_VER_HORAS_EXTRAS(string p_PK_CEDULA)
        {
            var p_PK_CEDULAParameter = p_PK_CEDULA != null ?
                new ObjectParameter("P_PK_CEDULA", p_PK_CEDULA) :
                new ObjectParameter("P_PK_CEDULA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ADMINISTRADOR_VER_HORAS_EXTRAS_Result>("ADMINISTRADOR_VER_HORAS_EXTRAS", p_PK_CEDULAParameter);
        }
    
        public virtual ObjectResult<ADMINISTRADOR_VER_SOLICITUDES_DE_HORAS_EXTRAS_Result> ADMINISTRADOR_VER_SOLICITUDES_DE_HORAS_EXTRAS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ADMINISTRADOR_VER_SOLICITUDES_DE_HORAS_EXTRAS_Result>("ADMINISTRADOR_VER_SOLICITUDES_DE_HORAS_EXTRAS");
        }
    
        public virtual ObjectResult<ADMINISTRADOR_VER_SOLICITUDES_DE_VACACIONES_Result> ADMINISTRADOR_VER_SOLICITUDES_DE_VACACIONES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ADMINISTRADOR_VER_SOLICITUDES_DE_VACACIONES_Result>("ADMINISTRADOR_VER_SOLICITUDES_DE_VACACIONES");
        }
    
        public virtual int AUMENTAR_DIAS_LIBRES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AUMENTAR_DIAS_LIBRES");
        }
    
        public virtual int EMPLEADO_ACTUALIZAR_DATOS(string p_CEDULA, string p_NOMBRE, string p_HORARIO, Nullable<System.DateTime> p_FECHA_NAC, string p_PUESTO)
        {
            var p_CEDULAParameter = p_CEDULA != null ?
                new ObjectParameter("P_CEDULA", p_CEDULA) :
                new ObjectParameter("P_CEDULA", typeof(string));
    
            var p_NOMBREParameter = p_NOMBRE != null ?
                new ObjectParameter("P_NOMBRE", p_NOMBRE) :
                new ObjectParameter("P_NOMBRE", typeof(string));
    
            var p_HORARIOParameter = p_HORARIO != null ?
                new ObjectParameter("P_HORARIO", p_HORARIO) :
                new ObjectParameter("P_HORARIO", typeof(string));
    
            var p_FECHA_NACParameter = p_FECHA_NAC.HasValue ?
                new ObjectParameter("P_FECHA_NAC", p_FECHA_NAC) :
                new ObjectParameter("P_FECHA_NAC", typeof(System.DateTime));
    
            var p_PUESTOParameter = p_PUESTO != null ?
                new ObjectParameter("P_PUESTO", p_PUESTO) :
                new ObjectParameter("P_PUESTO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EMPLEADO_ACTUALIZAR_DATOS", p_CEDULAParameter, p_NOMBREParameter, p_HORARIOParameter, p_FECHA_NACParameter, p_PUESTOParameter);
        }
    
        public virtual int EMPLEADO_INSERTAR_SOLICITUD_HORAS_EXTRAS(string p_NOMBRE, Nullable<System.DateTime> p_DIA_SOLICITUD, Nullable<decimal> p_CANT_HORAS)
        {
            var p_NOMBREParameter = p_NOMBRE != null ?
                new ObjectParameter("P_NOMBRE", p_NOMBRE) :
                new ObjectParameter("P_NOMBRE", typeof(string));
    
            var p_DIA_SOLICITUDParameter = p_DIA_SOLICITUD.HasValue ?
                new ObjectParameter("P_DIA_SOLICITUD", p_DIA_SOLICITUD) :
                new ObjectParameter("P_DIA_SOLICITUD", typeof(System.DateTime));
    
            var p_CANT_HORASParameter = p_CANT_HORAS.HasValue ?
                new ObjectParameter("P_CANT_HORAS", p_CANT_HORAS) :
                new ObjectParameter("P_CANT_HORAS", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EMPLEADO_INSERTAR_SOLICITUD_HORAS_EXTRAS", p_NOMBREParameter, p_DIA_SOLICITUDParameter, p_CANT_HORASParameter);
        }
    
        public virtual int EMPLEADO_INSERTAR_SOLICITUD_VACACIONES(string p_NOMBRE, Nullable<System.DateTime> p_FECHA_INICIO, Nullable<int> p_CANTIDAD_DIAS)
        {
            var p_NOMBREParameter = p_NOMBRE != null ?
                new ObjectParameter("P_NOMBRE", p_NOMBRE) :
                new ObjectParameter("P_NOMBRE", typeof(string));
    
            var p_FECHA_INICIOParameter = p_FECHA_INICIO.HasValue ?
                new ObjectParameter("P_FECHA_INICIO", p_FECHA_INICIO) :
                new ObjectParameter("P_FECHA_INICIO", typeof(System.DateTime));
    
            var p_CANTIDAD_DIASParameter = p_CANTIDAD_DIAS.HasValue ?
                new ObjectParameter("P_CANTIDAD_DIAS", p_CANTIDAD_DIAS) :
                new ObjectParameter("P_CANTIDAD_DIAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EMPLEADO_INSERTAR_SOLICITUD_VACACIONES", p_NOMBREParameter, p_FECHA_INICIOParameter, p_CANTIDAD_DIASParameter);
        }
    
        public virtual ObjectResult<string> EMPLEADO_VER_HORARIO(string p_CEDULA)
        {
            var p_CEDULAParameter = p_CEDULA != null ?
                new ObjectParameter("P_CEDULA", p_CEDULA) :
                new ObjectParameter("P_CEDULA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("EMPLEADO_VER_HORARIO", p_CEDULAParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> EMPLEADO_VER_HORAS_EXTRAS(string p_FK_CEDULA)
        {
            var p_FK_CEDULAParameter = p_FK_CEDULA != null ?
                new ObjectParameter("P_FK_CEDULA", p_FK_CEDULA) :
                new ObjectParameter("P_FK_CEDULA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("EMPLEADO_VER_HORAS_EXTRAS", p_FK_CEDULAParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EMPLEADO_VER_SALARIO(string p_PK_CEDULA)
        {
            var p_PK_CEDULAParameter = p_PK_CEDULA != null ?
                new ObjectParameter("P_PK_CEDULA", p_PK_CEDULA) :
                new ObjectParameter("P_PK_CEDULA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EMPLEADO_VER_SALARIO", p_PK_CEDULAParameter);
        }
    
        public virtual ObjectResult<REPORTE_DE_HORAS_EXTRA_Result> REPORTE_DE_HORAS_EXTRA(Nullable<System.DateTime> p_FECHA_INICIAL, Nullable<System.DateTime> p_FECHA_FINAL)
        {
            var p_FECHA_INICIALParameter = p_FECHA_INICIAL.HasValue ?
                new ObjectParameter("P_FECHA_INICIAL", p_FECHA_INICIAL) :
                new ObjectParameter("P_FECHA_INICIAL", typeof(System.DateTime));
    
            var p_FECHA_FINALParameter = p_FECHA_FINAL.HasValue ?
                new ObjectParameter("P_FECHA_FINAL", p_FECHA_FINAL) :
                new ObjectParameter("P_FECHA_FINAL", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<REPORTE_DE_HORAS_EXTRA_Result>("REPORTE_DE_HORAS_EXTRA", p_FECHA_INICIALParameter, p_FECHA_FINALParameter);
        }
    
        public virtual ObjectResult<REPORTE_DE_SALARIO_Result> REPORTE_DE_SALARIO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<REPORTE_DE_SALARIO_Result>("REPORTE_DE_SALARIO");
        }
    
        public virtual ObjectResult<REPORTE_VACACIONES_Result> REPORTE_VACACIONES(Nullable<System.DateTime> p_FECHA_INICIAL, Nullable<System.DateTime> p_FECHA_FINAL)
        {
            var p_FECHA_INICIALParameter = p_FECHA_INICIAL.HasValue ?
                new ObjectParameter("P_FECHA_INICIAL", p_FECHA_INICIAL) :
                new ObjectParameter("P_FECHA_INICIAL", typeof(System.DateTime));
    
            var p_FECHA_FINALParameter = p_FECHA_FINAL.HasValue ?
                new ObjectParameter("P_FECHA_FINAL", p_FECHA_FINAL) :
                new ObjectParameter("P_FECHA_FINAL", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<REPORTE_VACACIONES_Result>("REPORTE_VACACIONES", p_FECHA_INICIALParameter, p_FECHA_FINALParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int VERIFICAR_DIAS(Nullable<int> cANTI_DIAS, string cED, ObjectParameter rES1)
        {
            var cANTI_DIASParameter = cANTI_DIAS.HasValue ?
                new ObjectParameter("CANTI_DIAS", cANTI_DIAS) :
                new ObjectParameter("CANTI_DIAS", typeof(int));
    
            var cEDParameter = cED != null ?
                new ObjectParameter("CED", cED) :
                new ObjectParameter("CED", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VERIFICAR_DIAS", cANTI_DIASParameter, cEDParameter, rES1);
        }
    
        public virtual int VERIFICAR_FECHAS(Nullable<System.DateTime> iNICIO, ObjectParameter rES)
        {
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VERIFICAR_FECHAS", iNICIOParameter, rES);
        }
    }
}
